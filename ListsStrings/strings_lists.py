
#* СТРОКИ и СПИСКИ

#* Строка - это любой набор из символов, которые используются для хранения текста

#*  МЕТОДЫ строк - что умеют делать строки, как умеют видоизменяться

#? Конкатенация - ОБЪЕДИНЕНИЕ строк
name = "Bekzat" # создали переменную для хранения имени
full_name = "Dikhanov " + name # создали переменную для хранения полного имени (ФИ) 
print(full_name)
# Dikhanov Bekzat

#? Извлечение подстрок СРЕЗ: получение части строки. МЫ ИСПОЛЬЗУЕМ КВАДРАТНЫЕ КОВЫЧКИ
#! На техническом языке - ИНДЕКС - место, номер, очередь чего-либо
#! НАЧИНАЕМ ОТСЧЕТ С НУЛЯ. [с какого индекса, до какого индекса(не включительно)]
message = "Я учусь я программироватья! я это круто"
print(message[2:7])  # учусь

#! СРЕЗ по своей грамматике (синтаксису) похож на range(начало, конец(не включительно), шаги)

#? Изменение регистра: преобразование строки к верхнему или нижнему регистру. (MЕТОДЫ)
print(message.upper()) #* все значения верхнего регистра
print(message.lower()) #* все значения нижнего регистра
print(message.capitalize()) #* Первое (нулевое по индексу) значение в верхнем регистре
print(message.title()) #* Возвращает заглавными буквами всек СЛОВА в строке


#? ЗАМЕНА части: заменить какую то часть строки на новую строку (МЕТОД)
print(message.replace("я", "МЫ", 4))

#! Функции над строками
#? Расчет длины (количества символов) в строке length - длина = len()
print(len('0123abcd')) # 8

#? Превращение в строку - str - string - str()
print(str(999)) # '999' 
print(int(999.0)) # 999
print(float(999)) # 999.0 

#* СПИСКИ - хранение уже СПИСКА данных (можно даже разные типы данных)
#* Для чего: Объединяет список данных под одно хранилище
#* ОБОЗНАЧЕНИЕ: Квадратные скобки и любые элементы внутри чередуются запятыми

text = 'sdflkjasfl'
chislo = 6666

#* LIST


tasks = ['проснуться в 6 утра']
#? Добавление элемента в КОНЕЦ списка. В нашем случае, добавление задания
tasks.append('Пойти в зал в 6:30')
print(tasks)
#? Добавление элемента в УКАЗАННУЮ позицию списка. В нашем случае, добавление задания

tasks.insert(20, 'Выпить кофе в 6:10')
print(tasks)

tasks.extend(['Fff', 'fff'])
print(tasks)

#? Извлечение элементов: получение элемента по индексу
print(tasks[1])

books = ['Harry Potter']

print(books + tasks)



#? Удаление элементов: удаление элемента из списка по его названию.
tasks.remove('проснуться в 6 утра')
print(tasks)

#? Удаление последнего элемента
tasks.pop()
print(tasks)


#? Сортировка элементов по возрастанию
numbers = [5, 2, 10, 7, 3, 1, 1, 0]
numbers.sort()
print(numbers)

#! Осторожно: сначало, отдельно, нужно отсортировать список, только потом можно увидеть результат

#? Разделение строки на части по указанному разделителю

text = "apple,banana,cherry"
print(text.split(",")) #* ['apple', 'banana', 'cherry']

#! Здесь "," - это разделитель, смотря на который, мы определим как нам разделить эту строк
#! Т.е - находим запятую, и всё что есть справа или слева него, как отдельный элемент добавляем в список

#? Объединение списка в строку

list_of_fruits = ['apple', 'banana', 'cherry']

string_of_fruits = ", ".join(list_of_fruits)

#! Здесь ", " - это разделитель, чтобы в итоге мы получили строку "apple, banana, cherry"



#* MAX - MIN




